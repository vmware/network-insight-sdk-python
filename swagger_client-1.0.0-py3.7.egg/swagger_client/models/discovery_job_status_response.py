# coding: utf-8

"""
    VMware Aria Operations for Networks API Reference

    Operations for Networks API Reference

    OpenAPI spec version: 6.12.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DiscoveryJobStatusResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'job_name': 'str',
        'entity_id': 'str',
        'job_subtype': 'str',
        'run_status': 'str',
        'run_status_message': 'str',
        'created_by': 'str',
        'started_by': 'str',
        'start_time': 'int',
        'end_time': 'int',
        'job_log': 'str'
    }

    attribute_map = {
        'job_name': 'job_name',
        'entity_id': 'entity_id',
        'job_subtype': 'job_subtype',
        'run_status': 'run_status',
        'run_status_message': 'run_status_message',
        'created_by': 'created_by',
        'started_by': 'started_by',
        'start_time': 'start_time',
        'end_time': 'end_time',
        'job_log': 'job_log'
    }

    def __init__(self, job_name=None, entity_id=None, job_subtype=None, run_status=None, run_status_message=None, created_by=None, started_by=None, start_time=None, end_time=None, job_log=None):
        """
        DiscoveryJobStatusResponse - a model defined in Swagger
        """

        self._job_name = None
        self._entity_id = None
        self._job_subtype = None
        self._run_status = None
        self._run_status_message = None
        self._created_by = None
        self._started_by = None
        self._start_time = None
        self._end_time = None
        self._job_log = None

        if job_name is not None:
          self.job_name = job_name
        if entity_id is not None:
          self.entity_id = entity_id
        if job_subtype is not None:
          self.job_subtype = job_subtype
        if run_status is not None:
          self.run_status = run_status
        if run_status_message is not None:
          self.run_status_message = run_status_message
        if created_by is not None:
          self.created_by = created_by
        if started_by is not None:
          self.started_by = started_by
        if start_time is not None:
          self.start_time = start_time
        if end_time is not None:
          self.end_time = end_time
        if job_log is not None:
          self.job_log = job_log

    @property
    def job_name(self):
        """
        Gets the job_name of this DiscoveryJobStatusResponse.
        Discovery job name

        :return: The job_name of this DiscoveryJobStatusResponse.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """
        Sets the job_name of this DiscoveryJobStatusResponse.
        Discovery job name

        :param job_name: The job_name of this DiscoveryJobStatusResponse.
        :type: str
        """

        self._job_name = job_name

    @property
    def entity_id(self):
        """
        Gets the entity_id of this DiscoveryJobStatusResponse.
        Discovery Job status Model Key

        :return: The entity_id of this DiscoveryJobStatusResponse.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """
        Sets the entity_id of this DiscoveryJobStatusResponse.
        Discovery Job status Model Key

        :param entity_id: The entity_id of this DiscoveryJobStatusResponse.
        :type: str
        """

        self._entity_id = entity_id

    @property
    def job_subtype(self):
        """
        Gets the job_subtype of this DiscoveryJobStatusResponse.
        Discovery job sub type

        :return: The job_subtype of this DiscoveryJobStatusResponse.
        :rtype: str
        """
        return self._job_subtype

    @job_subtype.setter
    def job_subtype(self, job_subtype):
        """
        Sets the job_subtype of this DiscoveryJobStatusResponse.
        Discovery job sub type

        :param job_subtype: The job_subtype of this DiscoveryJobStatusResponse.
        :type: str
        """

        self._job_subtype = job_subtype

    @property
    def run_status(self):
        """
        Gets the run_status of this DiscoveryJobStatusResponse.
        Discovery job status

        :return: The run_status of this DiscoveryJobStatusResponse.
        :rtype: str
        """
        return self._run_status

    @run_status.setter
    def run_status(self, run_status):
        """
        Sets the run_status of this DiscoveryJobStatusResponse.
        Discovery job status

        :param run_status: The run_status of this DiscoveryJobStatusResponse.
        :type: str
        """

        self._run_status = run_status

    @property
    def run_status_message(self):
        """
        Gets the run_status_message of this DiscoveryJobStatusResponse.
        Discovery job status message

        :return: The run_status_message of this DiscoveryJobStatusResponse.
        :rtype: str
        """
        return self._run_status_message

    @run_status_message.setter
    def run_status_message(self, run_status_message):
        """
        Sets the run_status_message of this DiscoveryJobStatusResponse.
        Discovery job status message

        :param run_status_message: The run_status_message of this DiscoveryJobStatusResponse.
        :type: str
        """

        self._run_status_message = run_status_message

    @property
    def created_by(self):
        """
        Gets the created_by of this DiscoveryJobStatusResponse.
        Discovery job created by

        :return: The created_by of this DiscoveryJobStatusResponse.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """
        Sets the created_by of this DiscoveryJobStatusResponse.
        Discovery job created by

        :param created_by: The created_by of this DiscoveryJobStatusResponse.
        :type: str
        """

        self._created_by = created_by

    @property
    def started_by(self):
        """
        Gets the started_by of this DiscoveryJobStatusResponse.
        Discovery job started by

        :return: The started_by of this DiscoveryJobStatusResponse.
        :rtype: str
        """
        return self._started_by

    @started_by.setter
    def started_by(self, started_by):
        """
        Sets the started_by of this DiscoveryJobStatusResponse.
        Discovery job started by

        :param started_by: The started_by of this DiscoveryJobStatusResponse.
        :type: str
        """

        self._started_by = started_by

    @property
    def start_time(self):
        """
        Gets the start_time of this DiscoveryJobStatusResponse.
        Discovery job start time

        :return: The start_time of this DiscoveryJobStatusResponse.
        :rtype: int
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """
        Sets the start_time of this DiscoveryJobStatusResponse.
        Discovery job start time

        :param start_time: The start_time of this DiscoveryJobStatusResponse.
        :type: int
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """
        Gets the end_time of this DiscoveryJobStatusResponse.
        Discovery job end time

        :return: The end_time of this DiscoveryJobStatusResponse.
        :rtype: int
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """
        Sets the end_time of this DiscoveryJobStatusResponse.
        Discovery job end time

        :param end_time: The end_time of this DiscoveryJobStatusResponse.
        :type: int
        """

        self._end_time = end_time

    @property
    def job_log(self):
        """
        Gets the job_log of this DiscoveryJobStatusResponse.
        Discovery job log

        :return: The job_log of this DiscoveryJobStatusResponse.
        :rtype: str
        """
        return self._job_log

    @job_log.setter
    def job_log(self, job_log):
        """
        Sets the job_log of this DiscoveryJobStatusResponse.
        Discovery job log

        :param job_log: The job_log of this DiscoveryJobStatusResponse.
        :type: str
        """

        self._job_log = job_log

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DiscoveryJobStatusResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
