# coding: utf-8

"""
    VMware Aria Operations for Networks API Reference

    Operations for Networks API Reference

    OpenAPI spec version: 6.12.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DiscoveredAppsBulkSaveRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'discovered_apps': 'list[DiscoveredAppSaveRequest]',
        'discovery_type': 'str',
        'enable_intent': 'bool'
    }

    attribute_map = {
        'discovered_apps': 'discovered_apps',
        'discovery_type': 'discovery_type',
        'enable_intent': 'enable_intent'
    }

    def __init__(self, discovered_apps=None, discovery_type=None, enable_intent=True):
        """
        DiscoveredAppsBulkSaveRequest - a model defined in Swagger
        """

        self._discovered_apps = None
        self._discovery_type = None
        self._enable_intent = None

        if discovered_apps is not None:
          self.discovered_apps = discovered_apps
        if discovery_type is not None:
          self.discovery_type = discovery_type
        if enable_intent is not None:
          self.enable_intent = enable_intent

    @property
    def discovered_apps(self):
        """
        Gets the discovered_apps of this DiscoveredAppsBulkSaveRequest.

        :return: The discovered_apps of this DiscoveredAppsBulkSaveRequest.
        :rtype: list[DiscoveredAppSaveRequest]
        """
        return self._discovered_apps

    @discovered_apps.setter
    def discovered_apps(self, discovered_apps):
        """
        Sets the discovered_apps of this DiscoveredAppsBulkSaveRequest.

        :param discovered_apps: The discovered_apps of this DiscoveredAppsBulkSaveRequest.
        :type: list[DiscoveredAppSaveRequest]
        """

        self._discovered_apps = discovered_apps

    @property
    def discovery_type(self):
        """
        Gets the discovery_type of this DiscoveredAppsBulkSaveRequest.
        Indicates source of discovery. Only one source of discovery is accepted in one request.

        :return: The discovery_type of this DiscoveredAppsBulkSaveRequest.
        :rtype: str
        """
        return self._discovery_type

    @discovery_type.setter
    def discovery_type(self, discovery_type):
        """
        Sets the discovery_type of this DiscoveredAppsBulkSaveRequest.
        Indicates source of discovery. Only one source of discovery is accepted in one request.

        :param discovery_type: The discovery_type of this DiscoveredAppsBulkSaveRequest.
        :type: str
        """

        self._discovery_type = discovery_type

    @property
    def enable_intent(self):
        """
        Gets the enable_intent of this DiscoveredAppsBulkSaveRequest.
        Enabling intent will enable 2 intents which will creates a dynamic threshold configuration that analyses \"Application flow health\" and \"Application flow utilization\" for all VMs belonging to the application at tier level and generates alerts if violation is detected for any of them based on their historic behavior.

        :return: The enable_intent of this DiscoveredAppsBulkSaveRequest.
        :rtype: bool
        """
        return self._enable_intent

    @enable_intent.setter
    def enable_intent(self, enable_intent):
        """
        Sets the enable_intent of this DiscoveredAppsBulkSaveRequest.
        Enabling intent will enable 2 intents which will creates a dynamic threshold configuration that analyses \"Application flow health\" and \"Application flow utilization\" for all VMs belonging to the application at tier level and generates alerts if violation is detected for any of them based on their historic behavior.

        :param enable_intent: The enable_intent of this DiscoveredAppsBulkSaveRequest.
        :type: bool
        """

        self._enable_intent = enable_intent

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DiscoveredAppsBulkSaveRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
