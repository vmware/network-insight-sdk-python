# coding: utf-8

"""
    VMware Aria Operations for Networks API Reference

    Operations for Networks API Reference

    OpenAPI spec version: 6.12.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class Application(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'entity_id': 'str',
        'name': 'str',
        'entity_type': 'EntityType',
        'create_time': 'int',
        'created_by': 'str',
        'last_modified_time': 'int',
        'last_modified_by': 'str',
        'last_modified_by_service': 'str',
        'tier_count': 'int',
        'member_count': 'int',
        'update_status': 'UpdateStatus',
        'confidence': 'str'
    }

    attribute_map = {
        'entity_id': 'entity_id',
        'name': 'name',
        'entity_type': 'entity_type',
        'create_time': 'create_time',
        'created_by': 'created_by',
        'last_modified_time': 'last_modified_time',
        'last_modified_by': 'last_modified_by',
        'last_modified_by_service': 'last_modified_by_service',
        'tier_count': 'tier_count',
        'member_count': 'member_count',
        'update_status': 'update_status',
        'confidence': 'confidence'
    }

    def __init__(self, entity_id=None, name=None, entity_type=None, create_time=None, created_by=None, last_modified_time=None, last_modified_by=None, last_modified_by_service=None, tier_count=None, member_count=None, update_status=None, confidence=None):
        """
        Application - a model defined in Swagger
        """

        self._entity_id = None
        self._name = None
        self._entity_type = None
        self._create_time = None
        self._created_by = None
        self._last_modified_time = None
        self._last_modified_by = None
        self._last_modified_by_service = None
        self._tier_count = None
        self._member_count = None
        self._update_status = None
        self._confidence = None

        if entity_id is not None:
          self.entity_id = entity_id
        if name is not None:
          self.name = name
        if entity_type is not None:
          self.entity_type = entity_type
        if create_time is not None:
          self.create_time = create_time
        if created_by is not None:
          self.created_by = created_by
        if last_modified_time is not None:
          self.last_modified_time = last_modified_time
        if last_modified_by is not None:
          self.last_modified_by = last_modified_by
        if last_modified_by_service is not None:
          self.last_modified_by_service = last_modified_by_service
        if tier_count is not None:
          self.tier_count = tier_count
        if member_count is not None:
          self.member_count = member_count
        if update_status is not None:
          self.update_status = update_status
        if confidence is not None:
          self.confidence = confidence

    @property
    def entity_id(self):
        """
        Gets the entity_id of this Application.
        Entity ID that can be references in detail API calls

        :return: The entity_id of this Application.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """
        Sets the entity_id of this Application.
        Entity ID that can be references in detail API calls

        :param entity_id: The entity_id of this Application.
        :type: str
        """

        self._entity_id = entity_id

    @property
    def name(self):
        """
        Gets the name of this Application.
        Name of the object

        :return: The name of this Application.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this Application.
        Name of the object

        :param name: The name of this Application.
        :type: str
        """

        self._name = name

    @property
    def entity_type(self):
        """
        Gets the entity_type of this Application.

        :return: The entity_type of this Application.
        :rtype: EntityType
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """
        Sets the entity_type of this Application.

        :param entity_type: The entity_type of this Application.
        :type: EntityType
        """

        self._entity_type = entity_type

    @property
    def create_time(self):
        """
        Gets the create_time of this Application.
        Timestamp of when the object was created

        :return: The create_time of this Application.
        :rtype: int
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """
        Sets the create_time of this Application.
        Timestamp of when the object was created

        :param create_time: The create_time of this Application.
        :type: int
        """

        self._create_time = create_time

    @property
    def created_by(self):
        """
        Gets the created_by of this Application.
        The username of who created the object

        :return: The created_by of this Application.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """
        Sets the created_by of this Application.
        The username of who created the object

        :param created_by: The created_by of this Application.
        :type: str
        """

        self._created_by = created_by

    @property
    def last_modified_time(self):
        """
        Gets the last_modified_time of this Application.
        Timestamp of when the object was last modified

        :return: The last_modified_time of this Application.
        :rtype: int
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """
        Sets the last_modified_time of this Application.
        Timestamp of when the object was last modified

        :param last_modified_time: The last_modified_time of this Application.
        :type: int
        """

        self._last_modified_time = last_modified_time

    @property
    def last_modified_by(self):
        """
        Gets the last_modified_by of this Application.
        The username of who last modified the object

        :return: The last_modified_by of this Application.
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """
        Sets the last_modified_by of this Application.
        The username of who last modified the object

        :param last_modified_by: The last_modified_by of this Application.
        :type: str
        """

        self._last_modified_by = last_modified_by

    @property
    def last_modified_by_service(self):
        """
        Gets the last_modified_by_service of this Application.
        The service which last modified the application.

        :return: The last_modified_by_service of this Application.
        :rtype: str
        """
        return self._last_modified_by_service

    @last_modified_by_service.setter
    def last_modified_by_service(self, last_modified_by_service):
        """
        Sets the last_modified_by_service of this Application.
        The service which last modified the application.

        :param last_modified_by_service: The last_modified_by_service of this Application.
        :type: str
        """

        self._last_modified_by_service = last_modified_by_service

    @property
    def tier_count(self):
        """
        Gets the tier_count of this Application.
        The count of all the tiers of the application.

        :return: The tier_count of this Application.
        :rtype: int
        """
        return self._tier_count

    @tier_count.setter
    def tier_count(self, tier_count):
        """
        Sets the tier_count of this Application.
        The count of all the tiers of the application.

        :param tier_count: The tier_count of this Application.
        :type: int
        """

        self._tier_count = tier_count

    @property
    def member_count(self):
        """
        Gets the member_count of this Application.
        The count of all the members of the application.

        :return: The member_count of this Application.
        :rtype: int
        """
        return self._member_count

    @member_count.setter
    def member_count(self, member_count):
        """
        Sets the member_count of this Application.
        The count of all the members of the application.

        :param member_count: The member_count of this Application.
        :type: int
        """

        self._member_count = member_count

    @property
    def update_status(self):
        """
        Gets the update_status of this Application.

        :return: The update_status of this Application.
        :rtype: UpdateStatus
        """
        return self._update_status

    @update_status.setter
    def update_status(self, update_status):
        """
        Sets the update_status of this Application.

        :param update_status: The update_status of this Application.
        :type: UpdateStatus
        """

        self._update_status = update_status

    @property
    def confidence(self):
        """
        Gets the confidence of this Application.
        The confidence of discovery of this application, if applicable.

        :return: The confidence of this Application.
        :rtype: str
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """
        Sets the confidence of this Application.
        The confidence of discovery of this application, if applicable.

        :param confidence: The confidence of this Application.
        :type: str
        """

        self._confidence = confidence

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Application):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
