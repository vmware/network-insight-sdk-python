# coding: utf-8

"""
    vRealize Network Insight API Reference

    vRealize Network Insight API Reference

    OpenAPI spec version: 1.1.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class AzureCredentials(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'azure_client': 'str',
        'azure_key': 'str',
        'azure_tenant': 'str',
        'azure_subscription': 'str'
    }

    attribute_map = {
        'azure_client': 'azure_client',
        'azure_key': 'azure_key',
        'azure_tenant': 'azure_tenant',
        'azure_subscription': 'azure_subscription'
    }

    def __init__(self, azure_client=None, azure_key=None, azure_tenant=None, azure_subscription=None):
        """
        AzureCredentials - a model defined in Swagger
        """

        self._azure_client = None
        self._azure_key = None
        self._azure_tenant = None
        self._azure_subscription = None

        self.azure_client = azure_client
        self.azure_key = azure_key
        self.azure_tenant = azure_tenant
        self.azure_subscription = azure_subscription

    @property
    def azure_client(self):
        """
        Gets the azure_client of this AzureCredentials.

        :return: The azure_client of this AzureCredentials.
        :rtype: str
        """
        return self._azure_client

    @azure_client.setter
    def azure_client(self, azure_client):
        """
        Sets the azure_client of this AzureCredentials.

        :param azure_client: The azure_client of this AzureCredentials.
        :type: str
        """
        if azure_client is None:
            raise ValueError("Invalid value for `azure_client`, must not be `None`")

        self._azure_client = azure_client

    @property
    def azure_key(self):
        """
        Gets the azure_key of this AzureCredentials.

        :return: The azure_key of this AzureCredentials.
        :rtype: str
        """
        return self._azure_key

    @azure_key.setter
    def azure_key(self, azure_key):
        """
        Sets the azure_key of this AzureCredentials.

        :param azure_key: The azure_key of this AzureCredentials.
        :type: str
        """
        if azure_key is None:
            raise ValueError("Invalid value for `azure_key`, must not be `None`")

        self._azure_key = azure_key

    @property
    def azure_tenant(self):
        """
        Gets the azure_tenant of this AzureCredentials.

        :return: The azure_tenant of this AzureCredentials.
        :rtype: str
        """
        return self._azure_tenant

    @azure_tenant.setter
    def azure_tenant(self, azure_tenant):
        """
        Sets the azure_tenant of this AzureCredentials.

        :param azure_tenant: The azure_tenant of this AzureCredentials.
        :type: str
        """
        if azure_tenant is None:
            raise ValueError("Invalid value for `azure_tenant`, must not be `None`")

        self._azure_tenant = azure_tenant

    @property
    def azure_subscription(self):
        """
        Gets the azure_subscription of this AzureCredentials.

        :return: The azure_subscription of this AzureCredentials.
        :rtype: str
        """
        return self._azure_subscription

    @azure_subscription.setter
    def azure_subscription(self, azure_subscription):
        """
        Sets the azure_subscription of this AzureCredentials.

        :param azure_subscription: The azure_subscription of this AzureCredentials.
        :type: str
        """
        if azure_subscription is None:
            raise ValueError("Invalid value for `azure_subscription`, must not be `None`")

        self._azure_subscription = azure_subscription

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, AzureCredentials):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
